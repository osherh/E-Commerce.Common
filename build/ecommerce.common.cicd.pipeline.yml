AWSTemplateFormatVersion: "2010-09-09"

Resources:

  CommonPipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CommonPipelineRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: CommonPipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${EcommerceCommonBuildProject}
              - Effect: Allow
                Action:
                  - "codestar-connections:*"
                  - "codeconnections:*"
                Resource:
                  - !Sub arn:aws:codeconnections:${AWS::Region}:${AWS::AccountId}:connection/f3aa899b-d38e-48a8-8f9a-7095e7bf7f46

  CommonBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CommonBuildRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: "sts:AssumeRole"
      Policies:
        - PolicyName: CommonBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*

  CommonSharedPolicyDocument:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref CommonPipelineRole
        - !Ref CommonBuildRole
      PolicyName: CommonSharedPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "codeartifact:GetAuthorizationToken"
            Resource:
              - !Sub arn:aws:codeartifact:${AWS::Region}:${AWS::AccountId}:domain/ecommerce
          - Effect: Allow
            Action:
              - "codeartifact:GetRepositoryEndpoint"
              - "codeartifact:ReadFromRepository"
            Resource:
              - !Sub arn:aws:codeartifact:${AWS::Region}:${AWS::AccountId}:repository/ecommerce/ecommerce-common-repo
          - Effect: Allow
            Action:
              - "s3:GetObject"
              - "s3:PutObject"
            Resource:
              - !Sub arn:aws:s3:::${PipelineArtifactBucket}/*
#             - arn:aws:s3:::ecommerce-common-pipeline-artifacts
#             - arn:aws:s3:::ecommerce-common-pipeline-artifacts/*
          - Effect: Allow
            Action:
              - "sts:GetCallerIdentity"
            #Resource: !Sub arn:aws:sts::${AWS::AccountId}:assumed-role/*
            Resource: "*"

  EcommerceCodeArtifactRepository:
    Type: AWS::CodeArtifact::Repository
    Properties:
      RepositoryName: ecommerce-common-repo
      DomainName: ecommerce

  EcommerceCommonPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: ecommerce-common-pipeline
      RoleArn: !GetAtt CommonPipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Sub "arn:aws:codeconnections:${AWS::Region}:${AWS::AccountId}:connection/f3aa899b-d38e-48a8-8f9a-7095e7bf7f46"
                FullRepositoryId: osherh/E-Commerce.Common
                BranchName: main
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref EcommerceCommonBuildProject
              RunOrder: 1

  EcommerceCommonBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: ecommerce-common-build
      Source:
        Type: CODEPIPELINE
        BuildSpec: "build/buildspec.yml"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
      Artifacts:
        Type: CODEPIPELINE
        Name: BuildOutput
      ServiceRole: !GetAtt CommonBuildRole.Arn

  PipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ecommerce-common-artifacts

  CommonArtifactBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineArtifactBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
            Resource: !Sub arn:aws:s3:::${PipelineArtifactBucket}/*
            Principal:
              AWS: !GetAtt CommonPipelineRole.Arn

Outputs:
  PipelineName:
    Description: "E-Commerce Common CodePipeline"
    Value: !Ref EcommerceCommonPipeline

  BuildProjectName:
    Description: "E-Commerce Common CodeBuild project"
    Value: !Ref EcommerceCommonBuildProject
